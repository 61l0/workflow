log(amount);

String.size("abc")+5;


if (amount> 500)
{
  log(" more than 500 ");
   if (amount> 600)
   {
   log(" more than 600 ");
   }
}
return(false);
log("will never fire");

/* Date Functions */

Date.setTimezone('America/Los_Angeles');
Date.now("D M j -- Y-m-d H:i:s T");
Date.getDate();
Date.getDate()['hours'];



test='abc';

log('value of test= "'~test~'" as modified ');
return (true);

if (expenseType=='abc' && variable2>25') 
{
   return(true);
}
else
{
 
   return(false);
}


/*  While with break */

i=15;
i<10;
while(i>0)
{
log(" No "~i);
i<10;
if ( i < 10) 
   {
   log("about to break" ~i );
   break;
  }
i=i-1;

}

arr=[1,2,3,4];
arr;

foreach(arr as var)
{
var;
}

log('testing');		/* just to help you understand the results */

/* Web.invokeService('http://www.webservicex.net/stockquote.asmx?WSDL','GetQuote'); */




/* Web Service Example */


Web.addParameter('symbol','AAPL');

Web.invokeService('http://www.webservicex.net/stockquote.asmx?WSDL','GetQuote');

log(Web.result);		/* just to help you understand the results */
log(Web.result.GetQuoteResult); 

Web.XMLtoArray(Web.result.GetQuoteResult);

set("Quote",Web.XMLtoArray(Web.result.GetQuoteResult));

{{block if=Quote!=null }}

Company:  {Quote["Stock"]["Name"]} -  Last Price: {Quote["Stock"]["Last"]}  - As of  {Quote["Stock"]["Date"]} - {Quote["Stock"]["Time"]}

{{/block}}
/* Web.invokeService('http://www.webservicex.net/stockquote.asmx?WSDL','GetQuote'); */

{{if  x=a }} 
{{else}}
{{/if}}

Web.addParameter('symbol','AAPL');

Web.invokeService('http://www.webservicex.net/stockquote.asmx?WSDL','GetQuote');

Web.XMLtoArray(Web.result.GetQuoteResult);

Web.XMLtoArray(Web.result.GetQuoteResult)["Stock"]["Last"];




Web.addParameter('symbol','ORCL');

Web.invokeService('http://www.webservicex.net/stockquote.asmx?WSDL','GetQuote');

Web.XMLtoArray(Web.result.GetQuoteResult);

Web.XMLtoArray(Web.result.GetQuoteResult)["Stock"]["Last"];

/* ------------------------------ */

_case.caseId;

/*comments1*/

123;

{{block}}
<div>
Line 1
<br />
 Text inside block <b>{_case.caseId} </b>end of case id /* comment inside block */
</div>
{{/block}}



/*comments2*/

456;


{{block}}
 Second Text inside block {_case.caseId} end of case id /* comment inside block */
{{/block}}

true;



// Extended syntax

/* comment */
statement;
statement;

Template Syntax:
Template:
{{Template}}
Text here and there and every where {variable} or {expression}
{{/Template}}


<block id='abc' foreach='arrayvariable' condition=''>
    any text anywhere {variable}

</block>

amount>500;
echo(_user.email);
echo(_context);


--------------- Brief Mode -----------------

set return = ( (salad == 'Yes') ? true : false )

------------- Or -------------------------

if salad == 'Yes'  
  set return= true
else 
  set   return= false 
endif



=== OPtion 1 ========

{% if salad == 'Yes' %}
{% set return=true %}
{% else %}
{% set return=false %}
{% endif %}

=== OPtion 2 ========

{% set return=(salad == 'Yes' ? true : false) %}

{{ salad == 'Yes' ? true : false }}

=== OPtion 3 ========

{{ salad == 'Yes' ? return(true) : return(false) }}

=== OPtion 4 ========


set return= '' 
if salad == 'Yes' 
	set return= true 
else 
	set return= false 
endif

RETURN{{return}}


